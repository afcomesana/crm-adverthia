{"version":3,"sources":["logo.svg","redux/user/user.types.js","redux/user/user.actions.js","assets/google-logo.png","components/sign-in/sign-in.component.jsx","pages/sign-in/sign-in-page.component.jsx","redux/user/user.selector.js","components/data-source-item/data-source-item.component.jsx","components/data-sources-list/data-sources.component.jsx","components/sidebar/sidebar.component.jsx","pages/default/default-page.component.jsx","redux/lead/lead.types.js","redux/lead/lead.actions.js","error/email-domain-error.js","firebase/firebase.utils.js","redux/lead/lead.selector.js","data.columns.js","components/table-header/table-header.component.jsx","components/stage-field/stage-field.component.jsx","components/table-row/table-row.component.jsx","components/table-body/table-body.component.jsx","components/empty-leads/empty-leads.component.jsx","components/table-container/table-container.component.jsx","pages/leads/leads.component.jsx","pages/chances/chances.component.jsx","pages/candidates/candidates.component.jsx","pages/customers/customers.component.jsx","App.js","reportWebVitals.js","redux/lead/lead.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/user/user.sagas.js","api/axios.js","redux/lead/lead.sagas.js","redux/root-saga.js","redux/store.js","index.js"],"names":["userActionTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signInFailure","error","type","payload","connect","dispatch","googleSignInStart","className","onClick","src","googleLogo","alt","SignInPage","selectCurrentUser","createSelector","state","user","currentUser","DataSourceItem","children","pathname","useLocation","toLowerCase","slice","to","DataSources","mapStateToProps","createStructuredSelector","signOutStart","displayName","split","DefaultPage","icon","faSearch","leadActionTypes","FETCH_LEADS_START","FETCH_LEADS_SUCCESS","FETCH_LEADS_FAILURE","CHANGE_STAGE_START","CHANGE_STAGE_SUCCESS","CHANGE_STAGE_FAILURE","fetchLeadsStart","EmailDomainError","params","Error","captureStackTrace","name","date","Date","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","email","createdAt","set","console","log","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","selectLead","lead","selectLeads","leads","selectCandidates","isFetching","filter","item","stage","selectCustomers","selectChances","columns","field","headerName","width","TableHeader","map","index","length","style","changeStageStart","data","id","background","onChange","event","value","target","TableRow","dataRow","column","columnIndex","TableBody","EmptyLeads","faFolderOpen","window","location","TableContainer","isAxiosError","useEffect","checkUserSession","exact","path","component","Candidates","Chances","Customers","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","errorMessage","undefined","leadReducer","action","userReducer","rootReducer","combineReducers","getSnapshotFromUserAuth","signInWithGoogle","signInFailureWarning","isUserAuthenticated","signOut","onGoogleSignInStart","onSignInFailure","onSignOutStart","onCheckUserSession","userSagas","call","userSnapshot","put","signInWithPopup","withReactContent","Swal","fire","title","text","confirmButtonText","takeLatest","all","axios","create","baseURL","fetchLeadsAsync","changeStageAsync","fetchLeadsStartCall","onFetchLeadsStart","onChangeStageSuccess","leadSagas","API","response","status","post","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e578ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const userActionTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n    GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\r\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\r\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\r\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n    SIGN_OUT_START: 'SIGN_OUT_START',\r\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n    SIGN_UP_START: 'SIGN_UP_START',\r\n    SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\r\n    SIGN_UP_FAILURE: 'SIGN_UP_FAILURE'\r\n};\r\n\r\nexport default userActionTypes;","import userActionTypes from './user.types';\r\n\r\nexport const googleSignInStart = () => ({\r\n    type: userActionTypes.GOOGLE_SIGN_IN_START\r\n});\r\n\r\nexport const signInSuccess = user => ({\r\n    type: userActionTypes.SIGN_IN_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const signInFailure = error => ({\r\n    type: userActionTypes.SIGN_IN_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const checkUserSession = () => ({\r\n    type: userActionTypes.CHECK_USER_SESSION\r\n});\r\n\r\nexport const signOutStart = () => ({\r\n    type: userActionTypes.SIGN_OUT_START\r\n});\r\n\r\nexport const signOutSuccess = () => ({\r\n    type: userActionTypes.SIGN_OUT_SUCCESS\r\n});\r\n\r\nexport const signOutFailure = error => ({\r\n    type: userActionTypes.SIGN_OUT_FAILURE,\r\n    payload: error\r\n});","export default __webpack_public_path__ + \"static/media/google-logo.edd4e317.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './sign-in.styles.css';\r\n\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport googleLogo from '../../assets/google-logo.png';\r\n\r\n\r\nconst SignIn = ({ googleSignInStart }) => {\r\n    return (\r\n        <div className=\"sign-in-form\">\r\n            <button className=\"google-sign-in\" onClick={googleSignInStart}>\r\n                <img src={googleLogo} alt=\"google-logo\" />\r\n                <p>Iniciar Sesión con Google</p>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);","import React from 'react';\r\nimport './sign-in-page.styles.css';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\n\r\nconst SignInPage = () => (\r\n    <div className=\"sign-in-page\">\r\n        <SignIn />\r\n    </div>\r\n);\r\n\r\nexport default SignInPage;","import { createSelector } from 'reselect';\r\n\r\nconst selectUser = state => state.user;\r\n\r\nexport const selectCurrentUser = createSelector(\r\n    [selectUser],\r\n    user => user.currentUser\r\n);","import React from 'react';\r\nimport './data-source-item.styles.css';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst DataSourceItem = ({ children }) => {\r\n    const { pathname } = useLocation();\r\n    return (\r\n        <Link className={`data-source-item ${children.toLowerCase() === pathname.slice(1) ? 'selected' : ''}`} to={`/${children.toLowerCase()}`}>{children}</Link>\r\n    );\r\n}\r\nexport default DataSourceItem;","import React from 'react';\r\nimport './data-sources.styles.css';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport DataSourceItem from '../data-source-item/data-source-item.component.jsx';\r\n\r\nconst DataSources = () => {\r\n    return (\r\n        <div className=\"data-sources-list\">\r\n            <DataSourceItem>Candidatos</DataSourceItem>\r\n            <DataSourceItem>Oportunidades</DataSourceItem>\r\n            <DataSourceItem>Clientes</DataSourceItem>\r\n        </div>\r\n    );\r\n}\r\nexport default DataSources;","import React from 'react';\r\nimport './sidebar.styles.css';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { signOutStart } from '../../redux/user/user.actions';\r\n\r\nimport DataSources from '../data-sources-list/data-sources.component';\r\n\r\nconst Sidebar = ({ currentUser, signOutStart }) => {\r\n    const { displayName } = currentUser;\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n                <h3>Hola, {displayName.split(\" \")[0]}</h3>\r\n                <button className=\"sign-out-button\" onClick={signOutStart}>Salir</button>\r\n            </div>\r\n            <DataSources />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signOutStart: () => dispatch(signOutStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React from 'react';\r\nimport './default-page.styles.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DefaultPage = () => (\r\n    <div className=\"default-page\">\r\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\r\n    </div>\r\n);\r\n\r\nexport default DefaultPage;","const leadActionTypes = {\r\n    FETCH_LEADS_START: \"FETCH_LEADS_START\",\r\n    FETCH_LEADS_SUCCESS: \"FETCH_LEADS_SUCCESS\",\r\n    FETCH_LEADS_FAILURE: \"FETCH_LEADS_SUCCESS\",\r\n    CHANGE_STAGE_START: \"CHANGE_STAGE_START\",\r\n    CHANGE_STAGE_SUCCESS: \"CHANGE_STAGE_SUCCESS\",\r\n    CHANGE_STAGE_FAILURE: \"CHANGE_STAGE_FAILURE\"\r\n};\r\n\r\nexport default leadActionTypes;","import leadActionTypes from \"./lead.types\"\r\n\r\nexport const fetchLeadsStart = () => ({\r\n    type: leadActionTypes.FETCH_LEADS_START\r\n});\r\n\r\nexport const fetchLeadsSuccess = leads => ({\r\n    type: leadActionTypes.FETCH_LEADS_SUCCESS,\r\n    payload: leads\r\n});\r\n\r\nexport const fetchLeadsFailure = error => ({\r\n    type: leadActionTypes.FETCH_LEADS_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const changeStageStart = data => ({\r\n    type: leadActionTypes.CHANGE_STAGE_START,\r\n    payload: data\r\n});\r\n\r\nexport const changeStageSuccess = () => ({\r\n    type: leadActionTypes.CHANGE_STAGE_SUCCESS\r\n});\r\n\r\nexport const changeStageFailure = error => ({\r\n    type: leadActionTypes.CHANGE_STAGE_FAILURE,\r\n    payload: error.message\r\n});","class EmailDomainError extends Error {\r\n    constructor(...params) {\r\n        super(...params);\r\n\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, EmailDomainError)\r\n        }\r\n\r\n        this.name = \"EmailDomainError\";\r\n        this.date = new Date();\r\n    }\r\n}\r\n\r\nexport default EmailDomainError;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport EmailDomainError from '../error/email-domain-error';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDqBVltCqmubBEMyQz2IJAebKyl_hFrlRA\",\r\n    authDomain: \"crm-adverthia.firebaseapp.com\",\r\n    projectId: \"crm-adverthia\",\r\n    storageBucket: \"crm-adverthia.appspot.com\",\r\n    messagingSenderId: \"969091238454\",\r\n    appId: \"1:969091238454:web:0177808a8c8408271be697\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n        if (email.split(\"@\")[1] !== \"adverthia.com\") throw new EmailDomainError(\"Email domain is not valid. Your email must belong to Adverthia Digital Marketing.\");\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        } catch (error) {\r\n            console.log(\"error creating user\", error.message);\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n}\r\n\r\n// export const getCurrentUser = () => {\r\n//     return new Promise((resolve, reject) => {\r\n//         const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n//             unsubscribe();\r\n//             resolve(userAuth);\r\n//         }, reject)\r\n//     })\r\n// }\r\n\r\nexport const getCurrentUser = () => {\r\n    return auth.currentUser;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport default firebase;","import { createSelector } from 'reselect';\r\nimport { createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nexport const selectLead = state => state.lead;\r\n\r\nexport const selectLeads = createSelector(\r\n    [selectLead],\r\n    lead => lead.leads\r\n);\r\n\r\nexport const selectIsLeadsFetching = createSelector(\r\n    [selectLead],\r\n    lead => lead.isFetching\r\n);\r\n\r\nexport const selectCandidates = createSelector(\r\n    [selectLeads],\r\n    leads => leads ? leads.filter(item => item.stage === \"candidato\") : null\r\n);\r\n\r\nexport const selectCustomers = createSelector(\r\n    [selectLeads],\r\n    leads => leads ? leads.filter(item => item.stage === \"cliente\") : null\r\n);\r\n\r\nexport const selectChances = createSelector(\r\n    [selectLeads],\r\n    leads => leads ? leads.filter(item => item.stage === \"oportunidad\") : null\r\n);","const columns = [\r\n    {\r\n        field: 'email',\r\n        headerName: 'Correo electrónico',\r\n        width: '200px'\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Nombre',\r\n        width: '100px'\r\n    },\r\n    {\r\n        field: 'last_name',\r\n        headerName: 'Apellidos',\r\n        width: '200px'\r\n    },\r\n    {\r\n        field: 'phone',\r\n        headerName: 'Teléfono',\r\n        width: '100px'\r\n    },\r\n    {\r\n        field: 'city',\r\n        headerName: 'Ciudad',\r\n        width: '150px'\r\n    },\r\n    {\r\n        field: 'country',\r\n        headerName: 'País',\r\n        width: '80px'\r\n    },\r\n    {\r\n        field: 'service',\r\n        headerName: 'Servicio',\r\n        width: '150px'\r\n    },\r\n    {\r\n        field: 'stage',\r\n        headerName: 'Estado',\r\n        width: '80px'\r\n    }\r\n];\r\n\r\nexport default columns;","import React from 'react';\r\nimport './table-header.styles.css';\r\n\r\nimport columns from '../../data.columns';\r\n\r\nconst TableHeader = () => (\r\n    <thead>\r\n        <tr>\r\n            {columns.map((item, index) => <th className={`table-header-item ${index !== columns.length - 1 ? 'border-right' : ''}`} key={index} style={{width: item.width}}>{item.headerName}</th>)}\r\n        </tr>\r\n    </thead>\r\n);\r\n\r\nexport default TableHeader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeStageStart } from '../../redux/lead/lead.actions';\r\n\r\nimport './stage-field.styles.css';\r\n\r\nconst StageField = ({ id, stage, changeStageStart, index }) => {\r\n    const handleChange = event => {\r\n        const { value } = event.target;\r\n        changeStageStart({id: id, stage: value});\r\n    }\r\n\r\n    return (\r\n        <select className=\"stage-field\" style={{background: `${index % 2 ? '#25273a' : '#1d1f2e'}`}} onChange={handleChange} name=\"stage\" value={stage.toLowerCase()}>\r\n            <option className=\"stage-field-option\" value=\"candidato\">Candidato</option>\r\n            <option className=\"stage-field-option\" value=\"oportunidad\">Oportunidad</option>\r\n            <option className=\"stage-field-option\" value=\"cliente\">Cliente</option>\r\n        </select>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeStageStart: data => dispatch(changeStageStart(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(StageField);","import React from 'react';\r\n\r\nimport './table-row.styles.css';\r\n\r\nimport columns from '../../data.columns';\r\n\r\nimport StageField from '../stage-field/stage-field.component';\r\n\r\nconst TableRow = ({ dataRow, index }) => {\r\n    return (\r\n        <tr className={`table-row ${index % 2 ? '' : 'dark'}`}>\r\n            {columns.map((column, columnIndex) =>\r\n                column.field === 'stage' ? \r\n                <td className=\"table-row-item\"><StageField index={index} id={dataRow['id']} stage={dataRow['stage']} /></td> :\r\n                <td className=\"table-row-item border-right\" key={columnIndex}>{dataRow[column.field]}</td>\r\n            )}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport './table-body.styles.css';\r\n\r\nimport TableRow from '../table-row/table-row.component';\r\n\r\nconst TableBody = ({ data }) => {    \r\n    return (\r\n        <tbody>\r\n                {data.map((item, index) => <TableRow index={index} dataRow={item} />)}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './empty-leads.styles.css';\r\n\r\nconst EmptyLeads = () => (\r\n    <div className=\"empty-leads-page\">\r\n        <div className=\"icon-text-container\">\r\n            <FontAwesomeIcon className=\"empty-folder-icon\" icon={faFolderOpen} />\r\n            <h2>Todavía no hay {window.location.pathname.slice(1)}</h2>\r\n        </div>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default EmptyLeads;","import React from 'react';\r\n\r\nimport './table-container.styles.css';\r\n\r\nimport TableHeader from '../table-header/table-header.component';\r\nimport TableBody from '../table-body/table-body.component';\r\nimport EmptyLeads from '../empty-leads/empty-leads.component';\r\n\r\nconst TableContainer = ({ data }) => {\r\n    console.log(data);\r\n    return (\r\n        !data ? (\r\n            <h1>Cargando...</h1>\r\n        ) : data.isAxiosError ? (\r\n            <h1>Error al conectar con el servidor</h1>\r\n        ) : data.length > 0 ? (\r\n            <table className=\"table-container\">\r\n                <TableHeader />\r\n                <TableBody data={data} />\r\n            </table>\r\n        ) : (\r\n            <EmptyLeads />\r\n        )\r\n    );\r\n}\r\n\r\nexport default TableContainer;","import React, { useEffect } from 'react';\r\nimport './leads.styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchLeadsStart } from '../../redux/lead/lead.actions';\r\nimport { selectLeads } from '../../redux/lead/lead.selector';\r\n\r\nimport TableContainer from '../../components/table-container/table-container.component';\r\n\r\nconst Leads = ({ fetchLeadsStart, leads, location }) => {\r\n    useEffect(() => fetchLeadsStart(), [fetchLeadsStart]);\r\n\r\n    return (\r\n        <div className=\"leads\">\r\n            <h1>OPORTUNIDADES</h1>\r\n            <TableContainer data={leads} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    leads: selectLeads\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchLeadsStart: () => dispatch(fetchLeadsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leads);","import React, { useEffect } from 'react';\r\nimport './chances.styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchLeadsStart } from '../../redux/lead/lead.actions';\r\nimport { selectChances } from '../../redux/lead/lead.selector';\r\n\r\nimport TableContainer from '../../components/table-container/table-container.component';\r\n\r\nconst Chances = ({ fetchLeadsStart, leads }) => {\r\n    useEffect(() => fetchLeadsStart(), [fetchLeadsStart]);\r\n\r\n    return (\r\n        <div className=\"chances-page\">\r\n            <h1>Oportunidades</h1>\r\n            <TableContainer data={leads} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    leads: selectChances\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchLeadsStart: () => dispatch(fetchLeadsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chances);","import React, { useEffect } from 'react';\r\nimport './candidates.styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchLeadsStart } from '../../redux/lead/lead.actions';\r\nimport { selectCandidates } from '../../redux/lead/lead.selector';\r\n\r\nimport TableContainer from '../../components/table-container/table-container.component';\r\n\r\nconst Candidates = ({ fetchLeadsStart, leads }) => {\r\n    useEffect(() => fetchLeadsStart(), [fetchLeadsStart]);\r\n\r\n    return (\r\n        <div className=\"candidates-page\">\r\n            <h1>Candidatos</h1>\r\n            <TableContainer data={leads} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    leads: selectCandidates\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchLeadsStart: () => dispatch(fetchLeadsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Candidates);","import React, { useEffect } from 'react';\r\nimport './customers.styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchLeadsStart } from '../../redux/lead/lead.actions';\r\nimport { selectCustomers } from '../../redux/lead/lead.selector';\r\n\r\nimport TableContainer from '../../components/table-container/table-container.component';\r\n\r\nconst Customers = ({ fetchLeadsStart, leads }) => {\r\n    useEffect(() => fetchLeadsStart(), [fetchLeadsStart]);\r\n\r\n    return (\r\n        <div className=\"customers-page\">\r\n            <h1>Clientes</h1>\r\n            <TableContainer data={leads} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    leads: selectCustomers\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchLeadsStart: () => dispatch(fetchLeadsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport SignInPage from './pages/sign-in/sign-in-page.component';\nimport Sidebar from './components/sidebar/sidebar.component';\nimport DefaultPage from './pages/default/default-page.component';\nimport Leads from './pages/leads/leads.component';\nimport Chances from './pages/chances/chances.component';\nimport Candidates from './pages/candidates/candidates.component';\nimport Customers from './pages/customers/customers.component';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { checkUserSession } from './redux/user/user.actions';\n\n\nconst App = ({currentUser, checkUserSession}) => {\n  useEffect(() => checkUserSession(), []);\n  return (\n        currentUser ? (\n          <div className=\"App\">\n            <Sidebar />\n            <Switch>\n              <Route exact path='/' component={currentUser ? DefaultPage : null} />\n              <Route exact path=\"/candidatos\" component={currentUser ? Candidates : null} />\n              <Route exact path=\"/oportunidades\" component={currentUser ? Chances : null} />\n              <Route exact path=\"/clientes\" component={currentUser ? Customers : null} />\n              <Redirect from=\"/sign-in\" to=\"/\" />\n            </Switch>\n          </div>\n        ) : (\n          <Switch>\n            <Route path='/sign-in' component={SignInPage} />\n            <Redirect to='/sign-in' />\n          </Switch>\n        )\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({ \n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import leadActionTypes from \"./lead.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    leads: null,\r\n    isFetching: false,\r\n    errorMessage: undefined\r\n};\r\n\r\nconst leadReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case leadActionTypes.FETCH_LEADS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                leads: action.payload\r\n            }\r\n        case leadActionTypes.FETCH_LEADS_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case leadActionTypes.FETCH_LEADS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                errorMessage: action.payload.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default leadReducer;","import userActionTypes from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case userActionTypes.SIGN_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                error: null\r\n            };\r\n        case userActionTypes.SIGN_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: null,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\nimport leadReducer from './lead/lead.reducer';\r\nimport userReducer from './user/user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    lead: leadReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default rootReducer;","import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport userActionTypes from './user.types';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure\r\n} from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInFailureWarning(action) {\r\n    const { type, payload } = yield action;\r\n    if (payload.name === \"EmailDomainError\") {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: \"Email no válido\",\r\n            text: \"Debe pertenecer a Adverthia Digital Marketing para acceder al CRM.\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Vale\"\r\n        });\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        console.log(userAuth);\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onSignInFailure() {\r\n    yield takeLatest(userActionTypes.SIGN_IN_FAILURE, signInFailureWarning);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onSignInFailure),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart)\r\n    ]);\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:5000`\r\n});","import { takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport leadActionTypes from './lead.types';\r\n\r\nimport API from '../../api/axios';\r\n\r\nimport {\r\n    fetchLeadsStart,\r\n    fetchLeadsSuccess,\r\n    fetchLeadsFailure,\r\n    changeStageFailure,\r\n    changeStageSuccess\r\n} from './lead.actions';\r\n\r\nexport function* fetchLeadsAsync() {\r\n    try {\r\n        const response = yield API.get('/leads');\r\n        const { data, status } = response;\r\n        if (status === 200) yield put(fetchLeadsSuccess(data));\r\n    } catch (error) {\r\n        yield put(fetchLeadsFailure(error));\r\n    }\r\n}\r\n\r\nexport function* changeStageAsync({ payload: {id, stage} }) {\r\n    try {\r\n        const response = yield API.post(\r\n            '/change-lead-stage',\r\n            {\r\n                id,\r\n                stage\r\n            }\r\n        );\r\n        if (response.status === 200) yield put(changeStageSuccess());\r\n    } catch (error) {\r\n        yield put(changeStageFailure(error));\r\n    }\r\n}\r\n\r\nexport function* fetchLeadsStartCall() {\r\n    yield put(fetchLeadsStart());\r\n}\r\n\r\nexport function* onFetchLeadsStart() {\r\n    yield takeLatest(leadActionTypes.FETCH_LEADS_START, fetchLeadsAsync);\r\n}\r\n\r\nexport function* changeStageStart() {\r\n    yield takeLatest(leadActionTypes.CHANGE_STAGE_START, changeStageAsync);\r\n}\r\n\r\nexport function* onChangeStageSuccess() {\r\n    yield takeLatest(leadActionTypes.CHANGE_STAGE_SUCCESS, fetchLeadsStartCall);\r\n}\r\n\r\nexport function* leadSagas() {\r\n    yield all([\r\n        call(onFetchLeadsStart),\r\n        call(changeStageStart),\r\n        call(onChangeStageSuccess)\r\n    ]);\r\n}","import { all, call } from 'redux-saga/effects';\r\nimport { userSagas } from './user/user.sagas';\r\nimport { leadSagas } from './lead/lead.sagas';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        call(userSagas),\r\n        call(leadSagas)\r\n    ]);\r\n}","import { applyMiddleware, createStore } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [logger, sagaMiddleware];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store } from './redux/store'; \nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}